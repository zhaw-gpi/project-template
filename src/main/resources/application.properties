# Datenquelle wird auf filebasierte H2-Datenbank konfiguriert, die sich im 
# Root-Verzeichnis des Maven-Projekts befindet und ohne Tracing in ein File
# sowie Tracing in System.out auf Level Error (1) sowie mit Benutzername sa und
# leerem Passwort
spring.datasource.url=jdbc:h2:./zhaw-gpi;TRACE_LEVEL_FILE=0;TRACE_LEVEL_SYSTEM_OUT=1
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driverClassName=org.h2.Driver

# Erm\u00f6glicht, dass die H2-Verwaltungsoberfl\u00e4che \u00fcber /console aufgerufen werden kann
# Darf nat\u00fcrlich nur in einem Development-Kontext gesetzt sein
# Anmeldung gem\u00e4ss Angaben oben, aber bei URL ohne die Parameter (;...)
spring.h2.console.enabled=true
spring.h2.console.path=/console

# Tomcat-Server-Port
server.port = 8080

# Logging-Konfiguration f\u00fcr alle Services so, dass ausreichend Infos f\u00fcrs 
# Entwickeln vorhanden
logging.level.org.camunda.bpm.example=INFO
logging.level.org.camunda.bpm=INFO
logging.level.org.springframework=INFO
logging.level.org.apache=INFO

# Logs nicht bloss in Konsole, sondern auch Datei ausgeben (z.B., um f\u00fcr Support in einem Forum hochladen zu k\u00f6nnen)
# Standardm\u00e4ssig deaktivieren durch # vor logging.path. Der angegebene Pfad sollte in .gitignore enthalten sein
#logging.path=logs
logging.file.max-size=100KB
logging.file.max-history=0

# Camunda History-Konfiguration auf Full, das heisst, alle Process Engine-Aktivit\u00e4ten
# werden historisiert
camunda.bpm.history-level=full

# Camunda Admin-User, falls er noch nicht existiert. E-Mail-Adresse mit eigener ersetzen, falls man Mails erhalten m\u00f6chte
camunda.bpm.admin-user.id=a
camunda.bpm.admin-user.password=a
camunda.bpm.admin-user.firstName=Ich
camunda.bpm.admin-user.lastName=der Super-Admin
camunda.bpm.admin-user.email=a@b.ch

# Camunda Tasklist-Konfiguration, so dass initial ein Alle-Filter erstellt wird
camunda.bpm.filter.create=Alle

# Mail-Konfiguration f\u00fcr Versand per SMTP gem\u00e4ss http://www.baeldung.com/spring-email
# SMTP-Server, Username, Password und Sender-Adresse werden aus lokalen Umgebungsvariablen ausgelesen.
# In Netbeans werden diese gesetzt wie folgt:
# Right click Project ->Properties ->Actions -> Run/Debug project -> Set Properties: Add
# -> Env.mailHost=smtps.zhaw.ch oder smtp.gmail.com
# -> Env.mailUser=ZHAW/Gmail-Benutzername
# -> Env.mailPass=ZHAW/Gmail-Passwort
# -> Env.mailAddress=ZHAW/Gmail-E-Mail-Adresse, zu welcher der Benutzername geh\u00f6rt
# Respektive statt Mail-Versand nur Ausgabe in Konsole, wenn mail.debug=true
# Bitte beachten, dass die Zugangsdaten damit zwar sicher nie auf Github landen, aber dass jeder, welcher Zugriff
# auf den Notebook hat, auch das Passwort auslesen kann
mail.debug=false
mail.senderaddress=${mailAddress}
spring.mail.host=${mailHost}
spring.mail.port=587
spring.mail.username=${mailUser}
spring.mail.password=${mailPass}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Um mehr Informationen in der Console zu sehen, den Debug-Modus auf true setzen (Standard: false)
debug=false

# Banner in Konsole customizen (siehe src\main\resources\banner.txt
# Erstellt mit Schriftart Jazmine in http://patorjk.com/software/taag
spring.banner.location=classpath:banner.txt